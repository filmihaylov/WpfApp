//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp.DeliveryService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DeliveryService.IDeliveryService")]
    public interface IDeliveryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryService/GetShipments", ReplyAction="http://tempuri.org/IDeliveryService/GetShipmentsResponse")]
        Data.Database.Shipment[] GetShipments(Data.Database.Truck truck, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryService/GetShipments", ReplyAction="http://tempuri.org/IDeliveryService/GetShipmentsResponse")]
        System.Threading.Tasks.Task<Data.Database.Shipment[]> GetShipmentsAsync(Data.Database.Truck truck, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryService/UpdatePackageState", ReplyAction="http://tempuri.org/IDeliveryService/UpdatePackageStateResponse")]
        void UpdatePackageState(Data.States.ShipmentState shipmentState, Data.States.PackageCondition packageCondition, Data.States.PackageState packageState, string notes, Data.Database.Package package);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryService/UpdatePackageState", ReplyAction="http://tempuri.org/IDeliveryService/UpdatePackageStateResponse")]
        System.Threading.Tasks.Task UpdatePackageStateAsync(Data.States.ShipmentState shipmentState, Data.States.PackageCondition packageCondition, Data.States.PackageState packageState, string notes, Data.Database.Package package);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryService/GetPackages", ReplyAction="http://tempuri.org/IDeliveryService/GetPackagesResponse")]
        Data.Database.Package[] GetPackages(Data.Database.Shipment shipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryService/GetPackages", ReplyAction="http://tempuri.org/IDeliveryService/GetPackagesResponse")]
        System.Threading.Tasks.Task<Data.Database.Package[]> GetPackagesAsync(Data.Database.Shipment shipment);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDeliveryServiceChannel : WpfApp.DeliveryService.IDeliveryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeliveryServiceClient : System.ServiceModel.ClientBase<WpfApp.DeliveryService.IDeliveryService>, WpfApp.DeliveryService.IDeliveryService {
        
        public DeliveryServiceClient() {
        }
        
        public DeliveryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DeliveryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeliveryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeliveryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Data.Database.Shipment[] GetShipments(Data.Database.Truck truck, int skip, int take) {
            return base.Channel.GetShipments(truck, skip, take);
        }
        
        public System.Threading.Tasks.Task<Data.Database.Shipment[]> GetShipmentsAsync(Data.Database.Truck truck, int skip, int take) {
            return base.Channel.GetShipmentsAsync(truck, skip, take);
        }
        
        public void UpdatePackageState(Data.States.ShipmentState shipmentState, Data.States.PackageCondition packageCondition, Data.States.PackageState packageState, string notes, Data.Database.Package package) {
            base.Channel.UpdatePackageState(shipmentState, packageCondition, packageState, notes, package);
        }
        
        public System.Threading.Tasks.Task UpdatePackageStateAsync(Data.States.ShipmentState shipmentState, Data.States.PackageCondition packageCondition, Data.States.PackageState packageState, string notes, Data.Database.Package package) {
            return base.Channel.UpdatePackageStateAsync(shipmentState, packageCondition, packageState, notes, package);
        }
        
        public Data.Database.Package[] GetPackages(Data.Database.Shipment shipment) {
            return base.Channel.GetPackages(shipment);
        }
        
        public System.Threading.Tasks.Task<Data.Database.Package[]> GetPackagesAsync(Data.Database.Shipment shipment) {
            return base.Channel.GetPackagesAsync(shipment);
        }
    }
}
